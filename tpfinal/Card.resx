<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PVla+g8BkbmrbgSktQAAAABJRU5ErkJggg==
</value>
  </data>
</root>